# let nix = import "./nix-interop/nix.ncl" in
let filegen = import "./files.ncl" in
let Gitignorable = {
  gitignore
    : Bool
    | doc "Whether to gitignore the file"
    | default
    = false,
  ..
}
in
let header : String = m%"
    ##########
    # This file is autogenerated by Organist, don't edit
    ##########

  "%
  in
let ignored_files | { _ : Gitignorable } -> { _ : Bool } = fun files =>
    files
    |> std.record.to_array
    |> std.array.filter (fun { value = { gitignore, .. }, .. } => gitignore)
    |> std.array.map (fun { value = { target, .. }, .. } => { field = target, value = true })
    |> std.record.from_array
  in
let gitignore_content | { _ : Bool } -> String = fun ignores =>
    ignores
    |> std.record.map
      (
        fun pattern is_ignored =>
          "%{if is_ignored then "" else "!"}%{pattern}"
      )
    |> std.record.values
    |> std.string.join "\n"
    |> (fun c => header ++ c ++ "\n")
  in
{
  Schema =
    filegen.Schema
    & {

      files | filegen.Files,
      files | { _ : Gitignorable },

      git.ignore
        | { _ : Bool }
        = ignored_files files,

      files.".gitignore".materialisation_method = 'Copy,
      files.".gitignore".content = gitignore_content git.ignore,
    }
}
